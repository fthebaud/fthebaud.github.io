{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Workspace\\\\xmas-gift-2020\\\\src\\\\components\\\\slide\\\\Slide.jsx\";\nimport './Slide.css';\n\nconst isPrevious = (id, currentId) => id === currentId - 1;\n\nconst isNext = (id, currentId) => id === currentId + 1;\n\nconst isCurrent = (id, currentId) => id === currentId;\n\nconst isClose = (id, currentId) => isPrevious(id, currentId) || isCurrent(id, currentId) || isNext(id, currentId);\n\nconst getTranslation = (id, currentId) => {\n  if (isPrevious(id, currentId)) {\n    return '-100vw';\n  }\n\n  if (isNext(id, currentId)) {\n    return '100vw';\n  }\n\n  return 0;\n};\n\nconst Slide = ({\n  slideId,\n  currentSlideId,\n  children,\n  css\n}) => {\n  if (isClose(slideId, currentSlideId)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${css} slide`,\n      style: {\n        position: \"absolute\",\n        transform: `translate(${getTranslation(slideId, currentSlideId)})`\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this);\n  }\n\n  return null;\n};\n\n_c = Slide;\nexport default Slide;\n\nvar _c;\n\n$RefreshReg$(_c, \"Slide\");","map":{"version":3,"sources":["D:/Workspace/xmas-gift-2020/src/components/slide/Slide.jsx"],"names":["isPrevious","id","currentId","isNext","isCurrent","isClose","getTranslation","Slide","slideId","currentSlideId","children","css","position","transform"],"mappings":";;AAAA,OAAO,aAAP;;AAGA,MAAMA,UAAU,GAAG,CAACC,EAAD,EAAKC,SAAL,KAAmBD,EAAE,KAAKC,SAAS,GAAG,CAAzD;;AAEA,MAAMC,MAAM,GAAG,CAACF,EAAD,EAAKC,SAAL,KAAmBD,EAAE,KAAKC,SAAS,GAAG,CAArD;;AAEA,MAAME,SAAS,GAAG,CAACH,EAAD,EAAKC,SAAL,KAAmBD,EAAE,KAAKC,SAA5C;;AAEA,MAAMG,OAAO,GAAG,CAACJ,EAAD,EAAKC,SAAL,KAAmBF,UAAU,CAACC,EAAD,EAAKC,SAAL,CAAV,IAA6BE,SAAS,CAACH,EAAD,EAAKC,SAAL,CAAtC,IAAyDC,MAAM,CAACF,EAAD,EAAKC,SAAL,CAAlG;;AAEA,MAAMI,cAAc,GAAG,CAACL,EAAD,EAAKC,SAAL,KAAmB;AACtC,MAAIF,UAAU,CAACC,EAAD,EAAKC,SAAL,CAAd,EAA+B;AAC3B,WAAO,QAAP;AACH;;AACD,MAAIC,MAAM,CAACF,EAAD,EAAKC,SAAL,CAAV,EAA2B;AACvB,WAAO,OAAP;AACH;;AACD,SAAO,CAAP;AACH,CARD;;AAUA,MAAMK,KAAK,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,cAAX;AAA2BC,EAAAA,QAA3B;AAAqCC,EAAAA;AAArC,CAAD,KAAgD;AAC1D,MAAIN,OAAO,CAACG,OAAD,EAAUC,cAAV,CAAX,EAAsC;AAClC,wBACI;AAAK,MAAA,SAAS,EAAG,GAAEE,GAAI,QAAvB;AACI,MAAA,KAAK,EAAE;AACHC,QAAAA,QAAQ,EAAE,UADP;AAEHC,QAAAA,SAAS,EAAG,aAAYP,cAAc,CAACE,OAAD,EAAUC,cAAV,CAA0B;AAF7D,OADX;AAAA,gBAKSC;AALT;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AACD,SAAO,IAAP;AACH,CAbD;;KAAMH,K;AAeN,eAAeA,KAAf","sourcesContent":["import './Slide.css';\r\n\r\n\r\nconst isPrevious = (id, currentId) => id === currentId - 1;\r\n\r\nconst isNext = (id, currentId) => id === currentId + 1;\r\n\r\nconst isCurrent = (id, currentId) => id === currentId;\r\n\r\nconst isClose = (id, currentId) => isPrevious(id, currentId) || isCurrent(id, currentId) || isNext(id, currentId);\r\n\r\nconst getTranslation = (id, currentId) => {\r\n    if (isPrevious(id, currentId)) {\r\n        return '-100vw';\r\n    }\r\n    if (isNext(id, currentId)) {\r\n        return '100vw'\r\n    }\r\n    return 0;\r\n}\r\n\r\nconst Slide = ({ slideId, currentSlideId, children, css }) => {\r\n    if (isClose(slideId, currentSlideId)) {\r\n        return (\r\n            <div className={`${css} slide`}\r\n                style={{\r\n                    position: \"absolute\",\r\n                    transform: `translate(${getTranslation(slideId, currentSlideId)})`,\r\n                }}>\r\n                    {children}\r\n            </div>\r\n        )\r\n    }\r\n    return null;\r\n};\r\n    \r\nexport default Slide;"]},"metadata":{},"sourceType":"module"}